name: Install and Debug SnowSQL

on:
  push:

jobs:
  install-snowsql:
    runs-on: ubuntu-latest

    env:
      SNOWSQL_VERSION: 1.4.4
      SNOWSQL_DIR: $HOME/snowsql

    steps:
      - name: Print environment details
        run: |
          set -ex
          echo "====üñ•Ô∏è OS & User Details===="
          uname -a
          whoami
          echo "HOME is: $HOME"
          echo "PWD is: $PWD"
          echo "PATH is: $PATH"
          echo "SNOWSQL_VERSION: $SNOWSQL_VERSION"
          echo "SNOWSQL_DIR: $SNOWSQL_DIR"

      - name: Prepare directory and download SnowSQL installer
        run: |
          set -ex
          echo "====üìÇ Making SNOWSQL_DIR: $SNOWSQL_DIR===="
          mkdir -p "$SNOWSQL_DIR"

          DOWNLOAD_URL="https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.4/linux_x86_64/snowsql-${SNOWSQL_VERSION}-linux_x86_64.bash"
          echo "====üåê Downloading SnowSQL installer from: $DOWNLOAD_URL===="
          curl -L -v -o "$SNOWSQL_DIR/snowsql-${SNOWSQL_VERSION}.bash" "$DOWNLOAD_URL" || { echo "‚ùå Download failed!"; exit 1; }
          chmod +x "$SNOWSQL_DIR/snowsql-${SNOWSQL_VERSION}.bash"

          echo "====üìÑ Listing contents of SNOWSQL_DIR after download===="
          ls -alh "$SNOWSQL_DIR"

      - name: Install SnowSQL (with debug)
        run: |
          set -ex
          echo "====üì¶ About to run installer===="
          ls -alh "$SNOWSQL_DIR"
          echo "SNOWSQL installer script is:"
          file "$SNOWSQL_DIR/snowsql-${SNOWSQL_VERSION}.bash"
          echo "====üöÄ Running installer===="

          bash "$HOME/snowsql/snowsql-1.4.4.bash" -y -d "$HOME/snowsql" || {
            echo "‚ùå Installer script failed! Exit code: $?";
            echo "====ü™µ Checking for install.log====";
            if [ -f "$SNOWSQL_DIR/install.log" ]; then
              echo "==== install.log BEGIN ===="
              cat "$SNOWSQL_DIR/install.log"
              echo "==== install.log END ===="
            else
              echo "No install.log found."
            fi
            exit 1
          }

          echo "====üìÑ SNOWSQL_DIR listing after install===="
          ls -alh "$SNOWSQL_DIR"
          if [ -d "$SNOWSQL_DIR/bin" ]; then
            echo "====üìÑ bin directory contents===="
            ls -alh "$SNOWSQL_DIR/bin"
          else
            echo "‚ùó Bin directory not found!"
          fi

      - name: Add SnowSQL to PATH & verify installation
        run: |
          set -ex
          BIN_PATH="$SNOWSQL_DIR/bin"

          echo "====üîß Setting PATH and checking binary===="
          echo "$BIN_PATH" >> $GITHUB_PATH
          export PATH="$BIN_PATH:$PATH"
          echo "PATH now is: $PATH"

          echo "====üïµÔ∏è‚Äç‚ôÇÔ∏è Checking for snowsql binary===="
          ls -alh "$BIN_PATH" || echo "No bin directory or error listing bin!"
          which snowsql || { echo "‚ùå snowsql not found in current PATH!"; exit 1; }

          echo "====üß™ Verifying snowsql version===="
          snowsql -v || { echo "‚ùå snowsql failed to run!"; exit 1; }

      - name: Print install.log (if exists, after everything)
        if: always()
        run: |
          if [ -f "$HOME/snowsql/install.log" ]; then
            echo "==== Final install.log ===="
            cat "$HOME/snowsql/install.log"
          else
            echo "No install.log present at end of job."
          fi
